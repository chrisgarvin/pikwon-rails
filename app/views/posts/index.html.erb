<div class="container">

  <div class="logo">
    <span class ="character"></span>
    <span class ="character"></span>
    <span class ="character"></span>
  </div>

<!-- checks to see if current_user exists -->

<% if current_user %>

<!-- Finding all posts that were not created by current_user if current_user exists
and posts current_user hasnt picked on, and places those in available_posts
in order to be iterated through  -->

  <% @available_posts = []

  @posts.each do |post|

    if post.user_id == current_user.id or
      current_user.picks.where(:post_id => post.id).count > 0
    else
      @available_posts << post
    end
  end

  %>

<!-- if available_posts count == 0, lets user know they've reached the end -->

  <% if @available_posts.count == 0 %>

  <div class="options_container">

    <div class="options">

    YOU'VE REACHED THE END.

    </div>
  </div>


  <span class="new">
    <%= link_to "NEW", new_post_path %>
  </span>
  <div class="options_container">

    <div class="options">

      COME BACK LATER!

    </div>
  </div>

<!-- else it iterates randomly through available_posts allowing user to pick which
option they'd prefer -->

  <% else %>

    <% @available_posts.sample(1).each do |post| %>

  <div class="options_container">
    <div class="test_likes">
      <%= post.options.first.option_picks %>
    </div>
    <div class="options">

      <%= button_to post.options.first.option_text.upcase, picks_path(:id => post.options.first.id,
      :post => post.id, :skip => false) %>

    </div>
    <div class="test_likes">
    </div>
  </div>
  <span class="new">
    POSTED BY: <%= User.find(post.user_id).handle.upcase %>
  </span>
  <div class="options_container">
    <div class="test_likes">
      <%= post.options.second.option_picks %>
    </div>
    <div class="options">

      <%= button_to post.options.second.option_text.upcase, picks_path(:id => post.options.second.id,
      :post => post.id, :skip => false) %>

    </div>
    <div class="test_likes">
    </div>
  </div>
  <div class="skip">
    <%= button_to "SKIP\nWON",
    picks_path(:id => post.options.first.id,
    :post => post.id, :skip => true) %>
  </div>


  <% end %>


<% end %>

<!-- else current_user doesn't exist and loads random post which directs to signup -->

<% else %>

  <% @posts.all.sample(1).each do |post| %>
  <div class="options_container">

    <div class="options">

      <%= button_to post.options.first.option_text.upcase, picks_path(:id => post.options.first.id,
      :post => post.id) %>

    </div>
  </div>
  <span class="new">
    POSTED BY: <%= User.find(post.user_id).handle.upcase %>
  </span>
  <div class="options_container">

    <div class="options">

      <%= button_to post.options.second.option_text.upcase, picks_path(:id => post.options.second.id,
      :post => post.id) %>

    </div>
  </div>

  <% end %>
<% end %>

  <div class="logo">
    <span class ="character"></span>
    <span class ="character"></span>
    <span class ="character"></span>
  </div>

</div>

<script>

var optionOne = document.getElementsByClassName("options_container")[0];
var optionTwo = document.getElementsByClassName("options_container")[1];
var optionOneLink = document.getElementsByClassName("options")[0];
var optionTwoLink = document.getElementsByClassName("options")[1];
var clicked = false;

// showPercentages function in order to add animation to user click and display
// current statistics on post picks

function showPercentages(a, b){

// checks to make sure element hasn't been clicked yet do prevent multiple clicks

  if(!clicked){
    return function() {
      console.log("hi");

// sets initial values to pick value, mimicing the users pick by adding 1 to the
// value of the element they chose in order to display proper percentages

      var first = parseInt(document.getElementsByClassName("test_likes")[0].innerHTML) + b;
      var second = parseInt(document.getElementsByClassName("test_likes")[2].innerHTML) + a;

      // console.log(first)
      // console.log(second)

// takes the percentage of the first options picks and second options picks

      var percentageTop = Math.round((parseInt(first) / (parseInt(first) + parseInt(second))) * 100);
      var percentageBottom = Math.round((parseInt(second) / (parseInt(second) + parseInt(first))) * 100);

      // console.log(percentageTop)
      // console.log(percentageBottom)

// adds a class to the options that allow for display transition properties


// changes each options background to a gradient based on the percentage of picks
// chosen for each particular option, and sets a transition for animation effect

      optionOne.style.background = "linear-gradient(to right, rgb(94, 94, 92) 0%, rgb(94, 94, 92) "
       + parseInt(percentageTop) + "%, #25acb6 " + parseInt(percentageTop) + "%, #25acb6 100%)";
       optionOne.style.transition = "background .75s ease";
      optionTwo.style.background = "linear-gradient(to right, rgb(94, 94, 92) 0%, rgb(94, 94, 92) "
       + parseInt(percentageBottom) + "%, #25acb6 " + parseInt(percentageBottom) + "%, #25acb6 100%)";
       optionTwo.style.transition = "background .75s ease";

// adds percentage value to be displayed

       document.getElementsByClassName("test_likes")[0].textContent = percentageTop + "%";
       document.getElementsByClassName("test_likes")[2].textContent = percentageBottom + "%";

       console.log(document.getElementsByClassName("test_likes")[0].innerHTML);

       document.getElementsByClassName("test_likes")[0].style.display = "block";
       document.getElementsByClassName("test_likes")[1].style.display = "block";
       document.getElementsByClassName("test_likes")[2].style.display = "block";
       document.getElementsByClassName("test_likes")[3].style.display = "block";

       optionOne.className += " testClass";
       optionTwo.className += " testClass";

       console.log(optionOne.className);

    }
  }
}

// adds event listeners to desired elements, passing in values that will be returned
// in showPercentages function

optionOneLink.addEventListener("click", showPercentages(0,1))
optionTwoLink.addEventListener("click", showPercentages(1,0))


</script>
